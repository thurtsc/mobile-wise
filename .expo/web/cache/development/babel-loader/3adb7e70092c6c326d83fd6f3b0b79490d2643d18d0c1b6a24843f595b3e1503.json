{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\licia\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Financas\\\\node_modules\\\\react-native-calendars\\\\src\\\\expandableCalendar\\\\infiniteAgendaList.js\";\nimport PropTypes from 'prop-types';\nimport isUndefined from 'lodash/isUndefined';\nimport debounce from 'lodash/debounce';\nimport InfiniteList from '../infinite-list';\nimport XDate from 'xdate';\nimport React, { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { useDidUpdate } from '../hooks';\nimport { getMoment } from '../momentResolver';\nimport { isGTE, isToday } from '../dateutils';\nimport { getDefaultLocale } from '../services';\nimport { UpdateSources, todayString } from './commons';\nimport styleConstructor from './style';\nimport Context from './Context';\nimport constants from \"../commons/constants\";\nimport { parseDate } from \"../interface\";\nimport { LayoutProvider } from \"recyclerlistview/dist/reactnative/core/dependencies/LayoutProvider\";\nimport { AgendaSectionHeader } from \"./AgendaListsCommon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InfiniteAgendaList = props => {\n  const {\n    theme,\n    sections,\n    scrollToNextEvent,\n    avoidDateUpdates,\n    onScroll,\n    renderSectionHeader,\n    sectionStyle,\n    dayFormatter,\n    dayFormat = 'dddd, MMM d',\n    useMoment,\n    markToday = true,\n    infiniteListProps,\n    renderItem,\n    onEndReached,\n    onEndReachedThreshold,\n    refreshControl\n  } = props;\n  const {\n    date,\n    updateSource,\n    setDate\n  } = useContext(Context);\n  const style = useRef(styleConstructor(theme));\n  const list = useRef();\n  const _topSection = useRef(sections[0]?.title);\n  const didScroll = useRef(false);\n  const sectionScroll = useRef(false);\n  const [data, setData] = useState([]);\n  const dataRef = useRef(data);\n  useEffect(() => {\n    const items = sections.reduce((acc, cur) => {\n      return [...acc, {\n        title: cur.title,\n        isTitle: true\n      }, ...cur.data];\n    }, []);\n    setData(items);\n    dataRef.current = items;\n    if (date !== _topSection.current) {\n      setTimeout(() => {\n        scrollToSection(date);\n      }, 500);\n    }\n  }, [sections]);\n  useDidUpdate(() => {\n    if (updateSource !== UpdateSources.LIST_DRAG && updateSource !== UpdateSources.CALENDAR_INIT) {\n      scrollToSection(date);\n    }\n  }, [date]);\n  const getSectionIndex = date => {\n    let dataIndex = 0;\n    for (let i = 0; i < sections.length; i++) {\n      if (sections[i].title === date) {\n        return dataIndex;\n      }\n      dataIndex += sections[i].data.length + 1;\n    }\n  };\n  const getNextSectionIndex = date => {\n    const cur = new XDate(date);\n    let dataIndex = 0;\n    for (let i = 0; i < sections.length; i++) {\n      const titleDate = parseDate(sections[i].title);\n      if (isGTE(titleDate, cur)) {\n        return dataIndex;\n      }\n      dataIndex += sections[i].data.length + 1;\n    }\n  };\n  const getSectionTitle = useCallback(title => {\n    if (!title) return;\n    let sectionTitle = title;\n    if (dayFormatter) {\n      sectionTitle = dayFormatter(title);\n    } else if (dayFormat) {\n      if (useMoment) {\n        const moment = getMoment();\n        sectionTitle = moment(title).format(dayFormat);\n      } else {\n        sectionTitle = new XDate(title).toString(dayFormat);\n      }\n    }\n    if (markToday) {\n      const string = getDefaultLocale().today || todayString;\n      const today = isToday(title);\n      sectionTitle = today ? `${string}, ${sectionTitle}` : sectionTitle;\n    }\n    return sectionTitle;\n  }, []);\n  const scrollToSection = useCallback(debounce(requestedDate => {\n    const sectionIndex = scrollToNextEvent ? getNextSectionIndex(requestedDate) : getSectionIndex(requestedDate);\n    if (isUndefined(sectionIndex)) {\n      return;\n    }\n    if (list?.current && sectionIndex !== undefined) {\n      sectionScroll.current = true;\n      if (requestedDate !== _topSection.current) {\n        _topSection.current = sections[findItemTitleIndex(sectionIndex)]?.title;\n        list.current?.scrollToIndex(sectionIndex, true);\n      }\n      setTimeout(() => {\n        _onMomentumScrollEnd();\n      }, 500);\n    }\n  }, 1000, {\n    leading: false,\n    trailing: true\n  }), [sections]);\n  const layoutProvider = useMemo(() => new LayoutProvider(index => dataRef.current[index]?.isTitle ? 'title' : 'page', (type, dim) => {\n    dim.width = constants.screenWidth;\n    dim.height = type === 'title' ? infiniteListProps?.titleHeight ?? 60 : infiniteListProps?.itemHeight ?? 80;\n  }), []);\n  const _onScroll = useCallback(rawEvent => {\n    if (!didScroll.current) {\n      didScroll.current = true;\n      scrollToSection.cancel();\n    }\n    const event = {\n      nativeEvent: {\n        contentOffset: rawEvent.nativeEvent.contentOffset,\n        layoutMeasurement: rawEvent.nativeEvent.layoutMeasurement,\n        contentSize: rawEvent.nativeEvent.contentSize\n      }\n    };\n    onScroll?.(event);\n  }, [onScroll]);\n  const _onVisibleIndicesChanged = useCallback(debounce(all => {\n    if (all && all.length && !sectionScroll.current) {\n      const topItemIndex = all[0];\n      const topSection = data[findItemTitleIndex(topItemIndex)];\n      if (topSection && topSection !== _topSection.current) {\n        _topSection.current = topSection.title;\n        if (didScroll.current && !avoidDateUpdates) {\n          setDate?.(topSection.title, UpdateSources.LIST_DRAG);\n        }\n      }\n    }\n  }, infiniteListProps?.visibleIndicesChangedDebounce ?? 1000, {\n    leading: false,\n    trailing: true\n  }), [avoidDateUpdates, setDate, data]);\n  const findItemTitleIndex = useCallback(itemIndex => {\n    let titleIndex = itemIndex;\n    while (titleIndex > 0 && !data[titleIndex]?.isTitle) {\n      titleIndex--;\n    }\n    return titleIndex;\n  }, [data]);\n  const _onMomentumScrollEnd = useCallback(() => {\n    sectionScroll.current = false;\n  }, []);\n  const headerTextStyle = useMemo(() => [style.current.sectionText, sectionStyle], [sectionStyle]);\n  const _renderSectionHeader = useCallback(info => {\n    const title = info?.section?.title;\n    if (renderSectionHeader) {\n      return renderSectionHeader(title);\n    }\n    const headerTitle = getSectionTitle(title);\n    return _jsxDEV(AgendaSectionHeader, {\n      title: headerTitle,\n      style: headerTextStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 16\n    }, this);\n  }, [headerTextStyle]);\n  const _renderItem = useCallback((_type, item) => {\n    if (item?.isTitle) {\n      return _renderSectionHeader({\n        section: item\n      });\n    }\n    if (renderItem) {\n      return renderItem({\n        item\n      });\n    }\n    return _jsxDEV(_Fragment, {}, void 0, false);\n  }, [renderItem]);\n  const _onEndReached = useCallback(() => {\n    if (onEndReached) {\n      onEndReached({\n        distanceFromEnd: 0\n      });\n    }\n  }, [onEndReached]);\n  return _jsxDEV(InfiniteList, {\n    ref: list,\n    renderItem: _renderItem,\n    data: data,\n    style: style.current.container,\n    layoutProvider: layoutProvider,\n    onScroll: _onScroll,\n    onVisibleIndicesChanged: _onVisibleIndicesChanged,\n    scrollViewProps: {\n      onMomentumScrollEnd: _onMomentumScrollEnd,\n      nestedScrollEnabled: true,\n      refreshControl\n    },\n    onEndReached: _onEndReached,\n    onEndReachedThreshold: onEndReachedThreshold,\n    disableScrollOnDataChange: true,\n    renderFooter: infiniteListProps?.renderFooter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 13\n  }, this);\n};\nexport default InfiniteAgendaList;\nInfiniteAgendaList.displayName = 'InfiniteAgendaList';\nInfiniteAgendaList.propTypes = {\n  dayFormat: PropTypes.string,\n  dayFormatter: PropTypes.func,\n  useMoment: PropTypes.bool,\n  markToday: PropTypes.bool,\n  sectionStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  avoidDateUpdates: PropTypes.bool\n};","map":{"version":3,"names":["PropTypes","isUndefined","debounce","InfiniteList","XDate","React","useCallback","useContext","useEffect","useMemo","useRef","useState","useDidUpdate","getMoment","isGTE","isToday","getDefaultLocale","UpdateSources","todayString","styleConstructor","Context","constants","parseDate","LayoutProvider","AgendaSectionHeader","jsxDEV","_jsxDEV","Fragment","_Fragment","InfiniteAgendaList","props","theme","sections","scrollToNextEvent","avoidDateUpdates","onScroll","renderSectionHeader","sectionStyle","dayFormatter","dayFormat","useMoment","markToday","infiniteListProps","renderItem","onEndReached","onEndReachedThreshold","refreshControl","date","updateSource","setDate","style","list","_topSection","title","didScroll","sectionScroll","data","setData","dataRef","items","reduce","acc","cur","isTitle","current","setTimeout","scrollToSection","LIST_DRAG","CALENDAR_INIT","getSectionIndex","dataIndex","i","length","getNextSectionIndex","titleDate","getSectionTitle","sectionTitle","moment","format","toString","string","today","requestedDate","sectionIndex","undefined","findItemTitleIndex","scrollToIndex","_onMomentumScrollEnd","leading","trailing","layoutProvider","index","type","dim","width","screenWidth","height","titleHeight","itemHeight","_onScroll","rawEvent","cancel","event","nativeEvent","contentOffset","layoutMeasurement","contentSize","_onVisibleIndicesChanged","all","topItemIndex","topSection","visibleIndicesChangedDebounce","itemIndex","titleIndex","headerTextStyle","sectionText","_renderSectionHeader","info","section","headerTitle","fileName","_jsxFileName","lineNumber","columnNumber","_renderItem","_type","item","_onEndReached","distanceFromEnd","ref","container","onVisibleIndicesChanged","scrollViewProps","onMomentumScrollEnd","nestedScrollEnabled","disableScrollOnDataChange","renderFooter","displayName","propTypes","func","bool","oneOfType","object","number","array"],"sources":["C:/Users/licia/OneDrive/Área de Trabalho/Financas/node_modules/react-native-calendars/src/expandableCalendar/infiniteAgendaList.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport isUndefined from 'lodash/isUndefined';\nimport debounce from 'lodash/debounce';\nimport InfiniteList from '../infinite-list';\nimport XDate from 'xdate';\nimport React, { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { useDidUpdate } from '../hooks';\nimport { getMoment } from '../momentResolver';\nimport { isGTE, isToday } from '../dateutils';\nimport { getDefaultLocale } from '../services';\nimport { UpdateSources, todayString } from './commons';\nimport styleConstructor from './style';\nimport Context from './Context';\nimport constants from \"../commons/constants\";\nimport { parseDate } from \"../interface\";\nimport { LayoutProvider } from \"recyclerlistview/dist/reactnative/core/dependencies/LayoutProvider\";\nimport { AgendaSectionHeader } from \"./AgendaListsCommon\";\n/**\n * @description: AgendaList component that use InfiniteList to improve performance\n * @note: Should be wrapped with 'CalendarProvider'\n * @extends: InfiniteList\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/expandableCalendar.js\n */\nconst InfiniteAgendaList = (props) => {\n    const { theme, sections, scrollToNextEvent, avoidDateUpdates, onScroll, renderSectionHeader, sectionStyle, dayFormatter, dayFormat = 'dddd, MMM d', useMoment, markToday = true, infiniteListProps, renderItem, onEndReached, onEndReachedThreshold, refreshControl } = props;\n    const { date, updateSource, setDate } = useContext(Context);\n    const style = useRef(styleConstructor(theme));\n    const list = useRef();\n    const _topSection = useRef(sections[0]?.title);\n    const didScroll = useRef(false);\n    const sectionScroll = useRef(false);\n    const [data, setData] = useState([]);\n    const dataRef = useRef(data);\n    useEffect(() => {\n        const items = sections.reduce((acc, cur) => {\n            return [...acc, { title: cur.title, isTitle: true }, ...cur.data];\n        }, []);\n        setData(items);\n        dataRef.current = items;\n        if (date !== _topSection.current) {\n            setTimeout(() => {\n                scrollToSection(date);\n            }, 500);\n        }\n    }, [sections]);\n    useDidUpdate(() => {\n        // NOTE: on first init data should set first section to the current date!!!\n        if (updateSource !== UpdateSources.LIST_DRAG && updateSource !== UpdateSources.CALENDAR_INIT) {\n            scrollToSection(date);\n        }\n    }, [date]);\n    const getSectionIndex = (date) => {\n        let dataIndex = 0;\n        for (let i = 0; i < sections.length; i++) {\n            if (sections[i].title === date) {\n                return dataIndex;\n            }\n            dataIndex += sections[i].data.length + 1;\n        }\n    };\n    const getNextSectionIndex = (date) => {\n        const cur = new XDate(date);\n        let dataIndex = 0;\n        for (let i = 0; i < sections.length; i++) {\n            const titleDate = parseDate(sections[i].title);\n            if (isGTE(titleDate, cur)) {\n                return dataIndex;\n            }\n            dataIndex += sections[i].data.length + 1;\n        }\n    };\n    const getSectionTitle = useCallback((title) => {\n        if (!title)\n            return;\n        let sectionTitle = title;\n        if (dayFormatter) {\n            sectionTitle = dayFormatter(title);\n        }\n        else if (dayFormat) {\n            if (useMoment) {\n                const moment = getMoment();\n                sectionTitle = moment(title).format(dayFormat);\n            }\n            else {\n                sectionTitle = new XDate(title).toString(dayFormat);\n            }\n        }\n        if (markToday) {\n            const string = getDefaultLocale().today || todayString;\n            const today = isToday(title);\n            sectionTitle = today ? `${string}, ${sectionTitle}` : sectionTitle;\n        }\n        return sectionTitle;\n    }, []);\n    const scrollToSection = useCallback(debounce((requestedDate) => {\n        const sectionIndex = scrollToNextEvent ? getNextSectionIndex(requestedDate) : getSectionIndex(requestedDate);\n        if (isUndefined(sectionIndex)) {\n            return;\n        }\n        if (list?.current && sectionIndex !== undefined) {\n            sectionScroll.current = true; // to avoid setDate() in _onVisibleIndicesChanged\n            if (requestedDate !== _topSection.current) {\n                _topSection.current = sections[findItemTitleIndex(sectionIndex)]?.title;\n                list.current?.scrollToIndex(sectionIndex, true);\n            }\n            setTimeout(() => {\n                _onMomentumScrollEnd(); // the RecyclerListView doesn't trigger onMomentumScrollEnd when calling scrollToSection\n            }, 500);\n        }\n    }, 1000, { leading: false, trailing: true }), [sections]);\n    const layoutProvider = useMemo(() => new LayoutProvider((index) => dataRef.current[index]?.isTitle ? 'title' : 'page', (type, dim) => {\n        dim.width = constants.screenWidth;\n        dim.height = type === 'title' ? infiniteListProps?.titleHeight ?? 60 : infiniteListProps?.itemHeight ?? 80;\n    }), []);\n    const _onScroll = useCallback((rawEvent) => {\n        if (!didScroll.current) {\n            didScroll.current = true;\n            scrollToSection.cancel();\n        }\n        // Convert to a format similar to NativeSyntheticEvent<NativeScrollEvent>\n        const event = {\n            nativeEvent: {\n                contentOffset: rawEvent.nativeEvent.contentOffset,\n                layoutMeasurement: rawEvent.nativeEvent.layoutMeasurement,\n                contentSize: rawEvent.nativeEvent.contentSize,\n            },\n        };\n        onScroll?.(event);\n    }, [onScroll]);\n    const _onVisibleIndicesChanged = useCallback(debounce((all) => {\n        if (all && all.length && !sectionScroll.current) {\n            const topItemIndex = all[0];\n            const topSection = data[findItemTitleIndex(topItemIndex)];\n            if (topSection && topSection !== _topSection.current) {\n                _topSection.current = topSection.title;\n                if (didScroll.current && !avoidDateUpdates) {\n                    // to avoid setDate() on first load (while setting the initial context.date value)\n                    setDate?.(topSection.title, UpdateSources.LIST_DRAG);\n                }\n            }\n        }\n    }, infiniteListProps?.visibleIndicesChangedDebounce ?? 1000, { leading: false, trailing: true }), [avoidDateUpdates, setDate, data]);\n    const findItemTitleIndex = useCallback((itemIndex) => {\n        let titleIndex = itemIndex;\n        while (titleIndex > 0 && !data[titleIndex]?.isTitle) {\n            titleIndex--;\n        }\n        return titleIndex;\n    }, [data]);\n    const _onMomentumScrollEnd = useCallback(() => {\n        sectionScroll.current = false;\n    }, []);\n    const headerTextStyle = useMemo(() => [style.current.sectionText, sectionStyle], [sectionStyle]);\n    const _renderSectionHeader = useCallback((info) => {\n        const title = info?.section?.title;\n        if (renderSectionHeader) {\n            return renderSectionHeader(title);\n        }\n        const headerTitle = getSectionTitle(title);\n        return <AgendaSectionHeader title={headerTitle} style={headerTextStyle}/>;\n    }, [headerTextStyle]);\n    const _renderItem = useCallback((_type, item) => {\n        if (item?.isTitle) {\n            return _renderSectionHeader({ section: item });\n        }\n        if (renderItem) {\n            return renderItem({ item });\n        }\n        return <></>;\n    }, [renderItem]);\n    const _onEndReached = useCallback(() => {\n        if (onEndReached) {\n            onEndReached({ distanceFromEnd: 0 }); // The RecyclerListView doesn't provide the distanceFromEnd, so we just pass 0\n        }\n    }, [onEndReached]);\n    return (<InfiniteList ref={list} renderItem={_renderItem} data={data} style={style.current.container} layoutProvider={layoutProvider} onScroll={_onScroll} onVisibleIndicesChanged={_onVisibleIndicesChanged} scrollViewProps={{ onMomentumScrollEnd: _onMomentumScrollEnd, nestedScrollEnabled: true, refreshControl }} onEndReached={_onEndReached} onEndReachedThreshold={onEndReachedThreshold} disableScrollOnDataChange renderFooter={infiniteListProps?.renderFooter}/>);\n};\nexport default InfiniteAgendaList;\nInfiniteAgendaList.displayName = 'InfiniteAgendaList';\nInfiniteAgendaList.propTypes = {\n    dayFormat: PropTypes.string,\n    dayFormatter: PropTypes.func,\n    useMoment: PropTypes.bool,\n    markToday: PropTypes.bool,\n    sectionStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    avoidDateUpdates: PropTypes.bool\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}