{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\licia\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Financas\\\\src\\\\components\\\\CalendarModal\\\\index.js\";\nimport React, { useState } from 'react';\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Container, ButtonFilterText, ModalContent, ButtonFilter } from './styles';\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\nimport { ptBR } from './localeCalendar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nLocaleConfig.locales['pt-br'] = ptBR;\nLocaleConfig.defaultLocale = 'pt-br';\nexport default function CalendarModal({\n  setVisible,\n  handleFilter\n}) {\n  const [dateNow, setDateNow] = useState(new Date());\n  const [markeddates, setMarkedDates] = useState({});\n  function handleOnDayPress(date) {\n    setDateNow(new Date(date.dateString));\n    let markedDay = {};\n    markedDay[date.dateString] = {\n      selected: true,\n      selectedColor: '#568BD6',\n      textColor: '#FFF'\n    };\n    setMarkedDates(markedDay);\n  }\n  function handleFilterDate() {\n    handleFilter(dateNow);\n    setVisible();\n  }\n  return _jsxDEV(Container, {\n    children: [_jsxDEV(TouchableWithoutFeedback, {\n      onPress: setVisible,\n      children: _jsxDEV(View, {\n        style: {\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), _jsxDEV(ModalContent, {\n      children: [_jsxDEV(Calendar, {\n        onDayPress: handleOnDayPress,\n        markedDates: markeddates,\n        enableSwipeMonths: true,\n        theme: {\n          todayTextColor: '#E45F84',\n          selectedDayBackgroundColor: '#568BD6',\n          selectedDayTextColor: '#FFF'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), _jsxDEV(ButtonFilter, {\n        onPress: handleFilterDate,\n        children: _jsxDEV(ButtonFilterText, {\n          children: \"Filtrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","useState","TouchableWithoutFeedback","View","Container","ButtonFilterText","ModalContent","ButtonFilter","Calendar","LocaleConfig","ptBR","jsxDEV","_jsxDEV","locales","defaultLocale","CalendarModal","setVisible","handleFilter","dateNow","setDateNow","Date","markeddates","setMarkedDates","handleOnDayPress","date","dateString","markedDay","selected","selectedColor","textColor","handleFilterDate","children","onPress","style","flex","fileName","_jsxFileName","lineNumber","columnNumber","onDayPress","markedDates","enableSwipeMonths","theme","todayTextColor","selectedDayBackgroundColor","selectedDayTextColor"],"sources":["C:/Users/licia/OneDrive/√Årea de Trabalho/Financas/src/components/CalendarModal/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TouchableWithoutFeedback, View } from 'react-native';\r\nimport { Container, ButtonFilterText, ModalContent, ButtonFilter} from './styles';\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\nimport { ptBR } from './localeCalendar';\r\n\r\nLocaleConfig.locales['pt-br'] = ptBR;\r\nLocaleConfig.defaultLocale = 'pt-br';\r\n\r\nexport default function CalendarModal({ setVisible, handleFilter }){\r\n  const [dateNow, setDateNow] = useState(new Date())\r\n  const [markeddates, setMarkedDates] = useState({});\r\n\r\n  function handleOnDayPress(date){\r\n    //console.log(date.dateString);\r\n    setDateNow(new Date(date.dateString));\r\n\r\n    let markedDay = {};\r\n\r\n    markedDay[date.dateString] = {\r\n      selected: true,\r\n      selectedColor: '#568BD6',\r\n      textColor: '#FFF'\r\n    }\r\n\r\n    setMarkedDates(markedDay)\r\n\r\n  }\r\n\r\n\r\n  function handleFilterDate(){\r\n    handleFilter(dateNow);\r\n    setVisible();\r\n  }\r\n\r\n  return(\r\n    <Container>\r\n      <TouchableWithoutFeedback onPress={setVisible}>\r\n        <View style={{ flex:1 }}></View>\r\n      </TouchableWithoutFeedback>\r\n\r\n      <ModalContent>\r\n        \r\n        <Calendar\r\n          onDayPress={handleOnDayPress}\r\n          markedDates={markeddates}\r\n          enableSwipeMonths={true}\r\n          theme={{\r\n            todayTextColor: '#E45F84',\r\n            selectedDayBackgroundColor: '#568BD6',\r\n            selectedDayTextColor: '#FFF'\r\n          }}\r\n        />\r\n\r\n        <ButtonFilter onPress={handleFilterDate}>\r\n          <ButtonFilterText>Filtrar</ButtonFilterText>\r\n        </ButtonFilter>\r\n\r\n      </ModalContent>\r\n    </Container>\r\n  )\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,wBAAA;AAAA,OAAAC,IAAA;AAExC,SAASC,SAAS,EAAEC,gBAAgB,EAAEC,YAAY,EAAEC,YAAY,QAAO,UAAU;AACjF,SAASC,QAAQ,EAAEC,YAAY,QAAQ,wBAAwB;AAC/D,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExCH,YAAY,CAACI,OAAO,CAAC,OAAO,CAAC,GAAGH,IAAI;AACpCD,YAAY,CAACK,aAAa,GAAG,OAAO;AAEpC,eAAe,SAASC,aAAaA,CAAC;EAAEC,UAAU;EAAEC;AAAa,CAAC,EAAC;EACjE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAImB,IAAI,CAAC,CAAC,CAAC;EAClD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAElD,SAASsB,gBAAgBA,CAACC,IAAI,EAAC;IAE7BL,UAAU,CAAC,IAAIC,IAAI,CAACI,IAAI,CAACC,UAAU,CAAC,CAAC;IAErC,IAAIC,SAAS,GAAG,CAAC,CAAC;IAElBA,SAAS,CAACF,IAAI,CAACC,UAAU,CAAC,GAAG;MAC3BE,QAAQ,EAAE,IAAI;MACdC,aAAa,EAAE,SAAS;MACxBC,SAAS,EAAE;IACb,CAAC;IAEDP,cAAc,CAACI,SAAS,CAAC;EAE3B;EAGA,SAASI,gBAAgBA,CAAA,EAAE;IACzBb,YAAY,CAACC,OAAO,CAAC;IACrBF,UAAU,CAAC,CAAC;EACd;EAEA,OACEJ,OAAA,CAACR,SAAS;IAAA2B,QAAA,GACRnB,OAAA,CAACV,wBAAwB;MAAC8B,OAAO,EAAEhB,UAAW;MAAAe,QAAA,EAC5CnB,OAAA,CAACT,IAAI;QAAC8B,KAAK,EAAE;UAAEC,IAAI,EAAC;QAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,EAE3B1B,OAAA,CAACN,YAAY;MAAAyB,QAAA,GAEXnB,OAAA,CAACJ,QAAQ;QACP+B,UAAU,EAAEhB,gBAAiB;QAC7BiB,WAAW,EAAEnB,WAAY;QACzBoB,iBAAiB,EAAE,IAAK;QACxBC,KAAK,EAAE;UACLC,cAAc,EAAE,SAAS;UACzBC,0BAA0B,EAAE,SAAS;UACrCC,oBAAoB,EAAE;QACxB;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAEF1B,OAAA,CAACL,YAAY;QAACyB,OAAO,EAAEF,gBAAiB;QAAAC,QAAA,EACtCnB,OAAA,CAACP,gBAAgB;UAAA0B,QAAA,EAAC;QAAO;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEhB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}