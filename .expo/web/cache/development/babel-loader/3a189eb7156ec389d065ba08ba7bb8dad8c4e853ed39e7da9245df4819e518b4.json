{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { Background, Input, SubmitButton, SubmitText } from \"./styles\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Header from \"../../components/Header\";\nimport RegisterTypes from \"../../components/RegisterTypes\";\nimport api from \"../../services/api\";\nimport { format } from 'date-fns';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function New() {\n  var navigation = useNavigation();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    labelInput = _useState2[0],\n    setLabelInput = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    valueInput = _useState4[0],\n    setValueInput = _useState4[1];\n  var _useState5 = useState('receita'),\n    _useState6 = _slicedToArray(_useState5, 2),\n    type = _useState6[0],\n    setType = _useState6[1];\n  function handleSubmit() {\n    Keyboard.dismiss();\n    if (isNaN(parseFloat(valueInput)) || type === null) {\n      alert('Preencha todos os campos');\n      return;\n    }\n    Alert.alert('Confirmando dados', `Tipo: ${type} - Valor: ${parseFloat(valueInput)}`, [{\n      text: 'Cancelar',\n      style: 'cancel'\n    }, {\n      text: 'Continuar',\n      onPress: function onPress() {\n        return handleAdd();\n      }\n    }]);\n  }\n  function handleAdd() {\n    return _handleAdd.apply(this, arguments);\n  }\n  function _handleAdd() {\n    _handleAdd = _asyncToGenerator(function* () {\n      Keyboard.dismiss();\n      yield api.post('/receive', {\n        description: labelInput,\n        value: Number(valueInput),\n        type: type,\n        date: format(new Date(), 'dd/MM/yyyy')\n      });\n      setLabelInput('');\n      setValueInput('');\n      navigation.navigate('Home');\n    });\n    return _handleAdd.apply(this, arguments);\n  }\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    children: _jsxs(Background, {\n      children: [_jsx(Header, {\n        title: \"Registrando\"\n      }), _jsxs(SafeAreaView, {\n        style: {\n          marginTop: 14,\n          alignItems: 'center'\n        },\n        children: [_jsx(Input, {\n          placeholder: \"Descri\\xE7\\xE3o desse registro\",\n          value: labelInput,\n          onChangeText: function onChangeText(text) {\n            return setLabelInput(text);\n          }\n        }), _jsx(Input, {\n          placeholder: \"Valor desejado\",\n          keyboardType: \"numeric\",\n          value: valueInput,\n          onChangeText: function onChangeText(text) {\n            return setValueInput(text);\n          }\n        }), _jsx(RegisterTypes, {\n          type: type,\n          sendTypeChanged: function sendTypeChanged(item) {\n            return setType(item);\n          }\n        }), _jsx(SubmitButton, {\n          onPress: handleSubmit,\n          children: _jsx(SubmitText, {\n            children: \"Registrar\"\n          })\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","Background","Input","SubmitButton","SubmitText","SafeAreaView","TouchableWithoutFeedback","Keyboard","Alert","Header","RegisterTypes","api","format","useNavigation","jsx","_jsx","jsxs","_jsxs","New","navigation","_useState","_useState2","_slicedToArray","labelInput","setLabelInput","_useState3","_useState4","valueInput","setValueInput","_useState5","_useState6","type","setType","handleSubmit","dismiss","isNaN","parseFloat","alert","text","style","onPress","handleAdd","_handleAdd","apply","arguments","_asyncToGenerator","post","description","value","Number","date","Date","navigate","children","title","marginTop","alignItems","placeholder","onChangeText","keyboardType","sendTypeChanged","item"],"sources":["C:/Users/licia/OneDrive/Área de Trabalho/Financas/src/pages/New/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { Background, Input, SubmitButton, SubmitText } from './styles';\r\nimport { SafeAreaView, TouchableWithoutFeedback, Keyboard, Alert } from 'react-native';\r\n\r\nimport Header from '../../components/Header'\r\nimport RegisterTypes from '../../components/RegisterTypes';\r\n\r\nimport api from '../../services/api';\r\nimport { format } from 'date-fns';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nexport default function New(){\r\n  const navigation = useNavigation();\r\n\r\n  const [labelInput, setLabelInput] = useState('');\r\n  const [valueInput, setValueInput] = useState('');\r\n  const [type, setType] = useState('receita');\r\n\r\n  function handleSubmit(){\r\n    Keyboard.dismiss();\r\n\r\n    if(isNaN(parseFloat(valueInput)) || type === null){\r\n      alert('Preencha todos os campos')\r\n      return;\r\n    }\r\n\r\n    Alert.alert(\r\n      'Confirmando dados',\r\n      `Tipo: ${type} - Valor: ${parseFloat(valueInput)}`,\r\n      [\r\n        {\r\n          text: 'Cancelar',\r\n          style: 'cancel'\r\n        },\r\n        {\r\n          text: 'Continuar',\r\n          onPress: () => handleAdd() \r\n        }\r\n      ]\r\n    )\r\n\r\n  }\r\n\r\n\r\n  async function handleAdd(){\r\n    Keyboard.dismiss();\r\n\r\n    await api.post('/receive', {\r\n      description: labelInput,\r\n      value: Number(valueInput),\r\n      type: type,\r\n      date: format(new Date(), 'dd/MM/yyyy')\r\n    })\r\n\r\n    setLabelInput('');\r\n    setValueInput('');\r\n    navigation.navigate('Home')\r\n  }\r\n// Titulo registrando\r\n  return(\r\n    <TouchableWithoutFeedback onPress={ () => Keyboard.dismiss() } >\r\n      <Background >\r\n        <Header title=\"Registrando\" /> \r\n\r\n        <SafeAreaView style={{marginTop: 14, alignItems: 'center' }}>\r\n          <Input\r\n            placeholder=\"Descrição desse registro\"\r\n            value={labelInput}\r\n            onChangeText={ (text) => setLabelInput(text) }\r\n          />\r\n\r\n          <Input\r\n            placeholder=\"Valor desejado\"\r\n            keyboardType=\"numeric\"\r\n            value={valueInput}\r\n            onChangeText={ (text) => setValueInput(text) }\r\n          />\r\n\r\n          <RegisterTypes type={type} sendTypeChanged={ (item) => setType(item) } />\r\n\r\n          <SubmitButton onPress={handleSubmit}>\r\n            <SubmitText>Registrar</SubmitText>\r\n          </SubmitButton>\r\n\r\n        </SafeAreaView>\r\n      </Background>\r\n    </TouchableWithoutFeedback>\r\n  )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}